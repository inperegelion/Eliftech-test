{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\Eliftech\\\\components\\\\Orders\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\n\nclass Orders extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      orders: []\n    });\n\n    _defineProperty(this, \"fetchOrders\", () => {\n      fetch(\"http://localhost:3001/get-orders\").then(res => res.json()).then(res => {\n        this.setState({\n          orders: res\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchOrders();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Orders:\"), __jsx(\"button\", {\n      onClick: this.fetchOrders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Refresh\"), __jsx(PageSelector, {\n      totalPages: NaN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), __jsx(OrdersTable, {\n      orders: this.state.orders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst PageSelector = props => {\n  const currentPage = useRouter().query.page;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, currentPage));\n};\n\nconst OrdersTable = props => __jsx(\"table\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, __jsx(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"user_email\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, \"date\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"value\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, \"currency\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, \"status\"))), __jsx(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, props.orders.map((order, key) => __jsx(\"tr\", {\n  key: key,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, order.user_email), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, order.date), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, order.value), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, order.currency), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, order.status)))));\n\nexport default Orders;","map":{"version":3,"sources":["C:/Users/user/projects/Eliftech/components/Orders/index.js"],"names":["useRouter","React","Orders","Component","orders","fetch","then","res","json","setState","componentDidMount","fetchOrders","render","NaN","state","PageSelector","props","currentPage","query","page","OrdersTable","map","order","key","user_email","date","value","currency","status"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAC3B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAD2B;;AAAA,yCAOrB,MAAM;AAClBC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACX,aAAKE,QAAL,CAAc;AAAEL,UAAAA,MAAM,EAAEG;AAAV,SAAd;AACD,OAJH;AAKD,KAbkC;AAAA;;AAGnCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL;AACD;;AAUDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKD,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,MAAC,YAAD;AAAc,MAAA,UAAU,EAAEE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,MAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWV,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAxBkC;;AA2BrC,MAAMW,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,WAAW,GAAGjB,SAAS,GAAGkB,KAAZ,CAAkBC,IAAtC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,WAAP,CADF,CADF;AAKD,CARD;;AAUA,MAAMG,WAAW,GAAGJ,KAAK,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACZ,MAAN,CAAaiB,GAAb,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAChB;AAAI,EAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,KAAK,CAACE,UAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKF,KAAK,CAACG,IAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKH,KAAK,CAACI,KAAX,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKJ,KAAK,CAACK,QAAX,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKL,KAAK,CAACM,MAAX,CALF,CADD,CADH,CAVF,CADF;;AAyBA,eAAe1B,MAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\n\r\nclass Orders extends React.Component {\r\n  state = { orders: [] };\r\n\r\n  componentDidMount() {\r\n    this.fetchOrders();\r\n  }\r\n\r\n  fetchOrders = () => {\r\n    fetch(\"http://localhost:3001/get-orders\")\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({ orders: res });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Orders:</h3>\r\n        <button onClick={this.fetchOrders}>Refresh</button>\r\n        <PageSelector totalPages={NaN} />\r\n        <OrdersTable orders={this.state.orders} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PageSelector = props => {\r\n  const currentPage = useRouter().query.page;\r\n\r\n  return (\r\n    <div>\r\n      <span>{currentPage}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OrdersTable = props => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>user_email</th>\r\n        <th>date</th>\r\n        <th>value</th>\r\n        <th>currency</th>\r\n        <th>status</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.orders.map((order, key) => (\r\n        <tr key={key}>\r\n          <td>{order.user_email}</td>\r\n          <td>{order.date}</td>\r\n          <td>{order.value}</td>\r\n          <td>{order.currency}</td>\r\n          <td>{order.status}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default Orders;\r\n"]},"metadata":{},"sourceType":"module"}