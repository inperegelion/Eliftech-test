{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6860a7566b7b03e6c67f.hot-update.js","sources":["webpack:///./components/Orders/index.js"],"sourcesContent":["class Orders extends React.Component {\r\n  state = {\r\n    orders: [],\r\n    linesOnPage: 10,\r\n    currentPage: 0,\r\n    totalSize: undefined,\r\n    sortBy: \"user_email\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchOrders();\r\n  }\r\n\r\n  fetchOrders = () => {\r\n    const ordersQuery = `?from=${\r\n      Number(this.state.currentPage * this.state.linesOnPage) //\r\n    }&to=${\r\n      Number((this.state.currentPage + 1) * this.state.linesOnPage) //\r\n    }&sortBy=${this.state.sortBy}`;\r\n\r\n    fetch(`http://localhost:3001/get-orders${ordersQuery}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState(state => ({\r\n          ...state,\r\n          orders: res.orders,\r\n          totalSize: res.totalSize,\r\n        }));\r\n        console.log(\"ORDERS RECEIVED: \", res, this.state);\r\n      });\r\n    console.log(\"FETCH ORDERS BEEN SENT\", ordersQuery, this.state);\r\n  };\r\n\r\n  changePage = step => {\r\n    const newPage = this.state.currentPage + step;\r\n    if (\r\n      // check if page in borders\r\n      newPage >= 0 &&\r\n      newPage + step <= this.state.totalSize / this.state.linesOnPage + 1\r\n    )\r\n      this.setState(\r\n        prevState => ({ currentPage: newPage }),\r\n        newState => {\r\n          console.log(\"NOW PAGE SET TO:\", this.state.currentPage);\r\n          this.fetchOrders();\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Orders:</h3>\r\n        <button onClick={this.fetchOrders}>Refresh</button>\r\n        <div>\r\n          <button onClick={() => this.changePage(-1)}>{\"<\"}</button>\r\n          <span>{this.state.currentPage + 1}</span>\r\n          <button onClick={() => this.changePage(1)}>{\">\"}</button>\r\n        </div>\r\n        <OrdersTable orders={this.state.orders} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst OrdersTable = props => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>user_email</th>\r\n        <th>date</th>\r\n        <th>value</th>\r\n        <th>currency</th>\r\n        <th>status</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.orders.map((order, key) => (\r\n        <tr key={key}>\r\n          <td>{order.user_email}</td>\r\n          <td>{order.date}</td>\r\n          <td>{order.value}</td>\r\n          <td>{order.currency}</td>\r\n          <td>{order.status}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default Orders;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAWA;AACA;AAAA;AAAA;AAMA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAHA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;;;;;AAvCA;AACA;AACA;;;AAsCA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA9DA;AACA;AAgEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAZA;AACA;AAwBA;;;;A","sourceRoot":""}