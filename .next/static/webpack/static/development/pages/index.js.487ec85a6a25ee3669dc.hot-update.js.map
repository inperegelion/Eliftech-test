{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.487ec85a6a25ee3669dc.hot-update.js","sources":["webpack:///./components/Orders/index.js"],"sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\n\r\nclass Orders extends React.Component {\r\n  state = { orders: [] };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3001/get-orders\")\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({ orders: res });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Orders:</h3>\r\n        <PageSelector totalPages={NaN} />\r\n        <OrdersTable orders={this.state.orders} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PageSelector = props => {\r\n  const currentPage = useRouter().query.page;\r\n\r\n  return (\r\n    <div>\r\n      <span>{currentPage}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OrdersTable = props => (\r\n  <table>\r\n    <button>Refresh</button>\r\n    <thead>\r\n      <tr>\r\n        <th>user_email</th>\r\n        <th>date</th>\r\n        <th>value</th>\r\n        <th>currency</th>\r\n        <th>status</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.orders.map((order, key) => (\r\n        <tr key={key}>\r\n          <td>{order.user_email}</td>\r\n          <td>{order.date}</td>\r\n          <td>{order.value}</td>\r\n          <td>{order.currency}</td>\r\n          <td>{order.status}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default Orders;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAnBA;AACA;AAqbA;AACA;AAyBA;;;;A","sourceRoot":""}