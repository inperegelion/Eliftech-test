{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\projects\\\\Eliftech\\\\components\\\\Orders\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Orders =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Orders, _React$Component);\n\n  function Orders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Orders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      orders: [],\n      linesOnPage: 10,\n      currentPage: 0,\n      totalSize: undefined,\n      sortBy: \"user_email\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchOrders\", function () {\n      var ordersQuery = \"?from=\".concat(Number(_this.state.currentPage * _this.state.linesOnPage) //\n      , \"&to=\").concat(Number((_this.state.currentPage + 1) * _this.state.linesOnPage) //\n      , \"&sortBy=\").concat(_this.state.sortBy);\n      fetch(\"http://localhost:3001/get-orders\".concat(ordersQuery)).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        _this.setState(function (state) {\n          return _objectSpread({}, state, {\n            orders: res.orders,\n            totalSize: res.totalSize\n          });\n        });\n\n        console.log(\"ORDERS RECEIVED: \", res, _this.state);\n      });\n      console.log(\"FETCH ORDERS BEEN SENT\", ordersQuery, _this.state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changePage\", function (step) {\n      var newPage = _this.state.currentPage + step;\n      if ( // check if page in borders\n      newPage >= 0 && newPage + step <= _this.state.totalSize / _this.state.linesOnPage + 1) _this.setState(function (prevState) {\n        return {\n          currentPage: newPage\n        };\n      }, function (newState) {\n        console.log(\"NOW PAGE SET TO:\", _this.state.currentPage);\n\n        _this.fetchOrders();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSorting\", function (colName) {\n      _this.setState({\n        sortBy: colName\n      }, function (newState) {\n        _this.fetchOrders();\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchOrders();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Orders:\"), __jsx(\"button\", {\n        onClick: this.fetchOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Refresh\"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.changePage(-1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"<\"), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.currentPage + 1), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.changePage(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \">\")), __jsx(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        onClick: function onClick() {\n          return _this2.setSorting(\"user_email\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"user_email\"), __jsx(\"th\", {\n        onClick: function onClick() {\n          return _this2.setSorting(\"date\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"date\"), __jsx(\"th\", {\n        onClick: function onClick() {\n          return _this2.setSorting(\"value\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"value\"), __jsx(\"th\", {\n        onClick: function onClick() {\n          return _this2.setSorting(\"currency\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"currency\"), __jsx(\"th\", {\n        onClick: function onClick() {\n          return _this2.setSorting(\"status\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"status\"))), __jsx(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.orders.map(function (order, key) {\n        return __jsx(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, order.user_email), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, order.date), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, order.value), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, order.currency), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, order.status));\n      }))));\n    }\n  }]);\n\n  return Orders;\n}(React.Component);\n\nexport default Orders;","map":{"version":3,"sources":["C:/Users/user/projects/Eliftech/components/Orders/index.js"],"names":["Orders","orders","linesOnPage","currentPage","totalSize","undefined","sortBy","ordersQuery","Number","state","fetch","then","res","json","setState","console","log","step","newPage","prevState","newState","fetchOrders","colName","changePage","setSorting","map","order","key","user_email","date","value","currency","status","React","Component"],"mappings":"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","sourcesContent":["class Orders extends React.Component {\r\n  state = {\r\n    orders: [],\r\n    linesOnPage: 10,\r\n    currentPage: 0,\r\n    totalSize: undefined,\r\n    sortBy: \"user_email\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchOrders();\r\n  }\r\n\r\n  fetchOrders = () => {\r\n    const ordersQuery = `?from=${\r\n      Number(this.state.currentPage * this.state.linesOnPage) //\r\n    }&to=${\r\n      Number((this.state.currentPage + 1) * this.state.linesOnPage) //\r\n    }&sortBy=${this.state.sortBy}`;\r\n\r\n    fetch(`http://localhost:3001/get-orders${ordersQuery}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState(state => ({\r\n          ...state,\r\n          orders: res.orders,\r\n          totalSize: res.totalSize,\r\n        }));\r\n        console.log(\"ORDERS RECEIVED: \", res, this.state);\r\n      });\r\n    console.log(\"FETCH ORDERS BEEN SENT\", ordersQuery, this.state);\r\n  };\r\n\r\n  changePage = step => {\r\n    const newPage = this.state.currentPage + step;\r\n    if (\r\n      // check if page in borders\r\n      newPage >= 0 &&\r\n      newPage + step <= this.state.totalSize / this.state.linesOnPage + 1\r\n    )\r\n      this.setState(\r\n        prevState => ({ currentPage: newPage }),\r\n        newState => {\r\n          console.log(\"NOW PAGE SET TO:\", this.state.currentPage);\r\n          this.fetchOrders();\r\n        }\r\n      );\r\n  };\r\n\r\n  setSorting = colName => {\r\n    this.setState({ sortBy: colName }, newState => {\r\n      this.fetchOrders();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Orders:</h3>\r\n        <button onClick={this.fetchOrders}>Refresh</button>\r\n        <div>\r\n          <button onClick={() => this.changePage(-1)}>{\"<\"}</button>\r\n          <span>{this.state.currentPage + 1}</span>\r\n          <button onClick={() => this.changePage(1)}>{\">\"}</button>\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th onClick={() => this.setSorting(\"user_email\")}>user_email</th>\r\n              <th onClick={() => this.setSorting(\"date\")}>date</th>\r\n              <th onClick={() => this.setSorting(\"value\")}>value</th>\r\n              <th onClick={() => this.setSorting(\"currency\")}>currency</th>\r\n              <th onClick={() => this.setSorting(\"status\")}>status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.orders.map((order, key) => (\r\n              <tr key={key}>\r\n                <td>{order.user_email}</td>\r\n                <td>{order.date}</td>\r\n                <td>{order.value}</td>\r\n                <td>{order.currency}</td>\r\n                <td>{order.status}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n"]},"metadata":{},"sourceType":"module"}